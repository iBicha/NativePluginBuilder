
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using CMake.Instructions;
using CMake.Types;

namespace CMake
{
    [Serializable]
    public class CMakeListIOS : CMakeList
    {
        public override List<Instruction> GenerateInstructions()
        {
            var swigLibName = ProjectName + "Native";
            var swigLibFile =  Path.Combine(BuildDir, ProjectName + ".i");

            return new List<Instruction>
            {
                Comment.Create(
                    "AUTOGENERATED CMAKE FILE. DO NOT EDIT.\nMODIFICATIONS TO THIS FILE WILL BE OVERWRITTEN."),
                GeneralInstructions.MinimumRequiredVersion(MinimumRequiredVersion),
                GeneralInstructions.ProjectName(ProjectName),
                GeneralInstructions.BuildType(BuildType),
                AddDefinitions.Create(Defines),
                IncludeDirectories.Create(Path.GetDirectoryName(SourceFiles.First())),
                AddLibrary.Create(ProjectName, LibraryType, SourceFiles.ToArray()),
                
                XcodeInstructions.IOSInstallUniversalLibraries(true),
                XcodeInstructions.ActiveArchOnly(false),
                XcodeInstructions.EffectivePlatforms(true, true),
                
                Install.Create(ProjectName, OutputDir),
                //SWIG
                FindPackage.Create("SWIG"),
                Include.Create("${SWIG_USE_FILE}"),
                Set.Create("CMAKE_SWIG_FLAGS", "\"\""),
                Set.Create("CMAKE_SWIG_OUTDIR", BindingsDir),
                
                GenericInstruction.Create($"SET_SOURCE_FILES_PROPERTIES({swigLibFile} PROPERTIES CPLUSPLUS ON)"),
                GenericInstruction.Create($"SET_SOURCE_FILES_PROPERTIES({swigLibFile} PROPERTIES SWIG_FLAGS \"-includeall;-namespace;{ProjectName};-dllimport;__Internal\")"),
                  
                SwigAddLibrary.Create(swigLibName, LibraryType.Static, Language.Csharp, swigLibFile),
                TargetIncludeDirectories.Create(swigLibName, Path.GetDirectoryName(SourceFiles.First())),
                SwigLinkLibraries.Create(swigLibName, ProjectName),
                Install.Create(swigLibName, OutputDir)
            };
        }
    }
}